basePath: /
definitions:
  dto.CreatePostInput:
    properties:
      author_name:
        type: string
      body:
        type: string
      published_at:
        type: string
      title:
        type: string
    type: object
  dto.CreatePostOutput:
    properties:
      id:
        type: string
    type: object
  dto.ListPostsOutput:
    properties:
      posts:
        items:
          $ref: '#/definitions/dto.Post'
        type: array
    type: object
  dto.Post:
    properties:
      author_name:
        type: string
      body:
        type: string
      id:
        type: string
      published_at:
        type: string
      title:
        type: string
    type: object
  errors.ErrorModel:
    properties:
      errors:
        items: {}
        type: array
      message:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: kelvingomesdeveloper@gmail.com
    name: Kelvin Gomes
    url: https://www.linkedin.com/in/kelvin-gomes-fernandes
  description: Posts API
  termsOfService: http://swagger.io/terms/
  title: Go Posts API
  version: "1.0"
paths:
  /post:
    get:
      consumes:
      - application/json
      description: List Posts by pagination
      parameters:
      - description: Page Number
        in: query
        name: page
        type: integer
      - description: Limit of posts
        in: query
        name: limit
        type: integer
      - description: Sort by
        enum:
        - asc
        - desc
        in: query
        name: sort
        type: string
      - description: Author Name
        in: query
        name: author_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ListPostsOutput'
            type: array
      summary: List Posts by pagination
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Create a new post
      parameters:
      - description: Post Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePostInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.CreatePostOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorModel'
      summary: Create a new post
      tags:
      - posts
  /post/{id}:
    delete:
      consumes:
      - application/json
      description: Delete post by id
      parameters:
      - description: Post ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errors.ErrorModel'
      summary: Delete post
      tags:
      - posts
swagger: "2.0"
